services:
  nginx:
    image: nginx:latest
    container_name: deliverycenter-nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf #app,web and admin panel
      - ./docker/nginx/conf.d/prod.conf:/etc/nginx/conf.d/default.conf #app
      - ./.data/nginx/logs:/var/log/nginx
      - ./src:/var/www/app
      - ./.data/certs/certbot/conf:/etc/letsencrypt #uncomment when production deploy
      - ./.data/certs/certbot/www:/var/www/certbot #uncomment when production deploy
    ports:
      - 80:80
      - 443:443 #uncomment when production deploy
    depends_on:
      - api
    networks:
      - deliverycenter_network
    environment:
      - X_SERVER_TYPE=nginx

  api:
    image: ghcr.io/bitekservicesinc/deliverycenter:latest
    container_name: deliverycenter-app
    volumes:
      - ./src:/var/www/app
    restart: always
    networks:
      - deliverycenter_network
    environment:
      - X_SERVER_TYPE=api

  redis:
    image: redis:latest
    container_name: deliverycenter-redis
    ports:
      - 6379:6379
    volumes:
      - ./.data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always
    networks:
      - deliverycenter_network

  certbot:
    image: certbot/certbot
    container_name: deliverycenter-certbot
    restart: unless-stopped
    volumes:
      - ./.data/certs/certbot/conf:/etc/letsencrypt
      - ./.data/certs/certbot/www:/var/www/certbot
    networks:
      - deliverycenter_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  redis:
    driver: local

networks:
  deliverycenter_network:
    driver: bridge
